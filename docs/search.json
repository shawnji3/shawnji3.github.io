[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "Data Visualization",
    "section": "",
    "text": "Understanding the evolution of public taste in musics gives us insights into broader cultural shifts and trends. The analysis of streaming data would show the changes in the popularity of different music genres in different time and this can reflect the shifts in cultural preferences. Music can act as a cultural and economic force. The public preferences for popular songs can implicate some social and economic implications, this relates to consumer spending habits, brand perception and even political attitudes. Public preferences directly influence the success of artists, labels, streaming platforms,etc By tracking changes in popular song preferences, stakeholders in the music industry can adapt their strategies to meet evolving consumer demands.\nThere are 3 data visualizations in the following paragraphs, which include a trend line, a pie chart and an interactive bar chart.\n\n\nThe first data visualization is a trend line where it shows the trend of the popularity of a specific genre through 2000-2022. There are 6 genres in total, ‘r&b’, ‘pop’, ‘hip pop’, ‘soul’, ‘rock’, ‘country’’. There are different colors labeled for different genres\n\n# Load required libraries\nlibrary(ggplot2)\nlibrary(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\n# Read the dataset\nmusic_data &lt;- read.csv(\"/Users/shawnji/Documents/billboard_used.csv\")  # Replace \"your_dataset.csv\" with the actual file path\n\n# List of genres\ngenres &lt;- c('r&b', 'pop', 'hip pop', 'soul', 'rock', 'country')\n\n# Function to replace genre with matching genre from the list\nreplace_genre &lt;- function(genre_str, genre_list) {\n  for (genre in genre_list) {\n    if (genre %in% unlist(strsplit(gsub(\"\\\\[|\\\\]|'\", \"\", genre_str), \", \"))) {\n      return(genre)\n    }\n  }\n  return(NA)\n}\n\n# Modify 'Genres' column to have only the matching genre\nmusic_data$Genres &lt;- sapply(music_data$Genres, replace_genre, genre_list = genres)\n\n# Remove rows with NA in 'Genres' column\nmusic_data &lt;- music_data[complete.cases(music_data$Genres), ]\n\n# Reshape the data into long format\nmusic_data_long &lt;- reshape2::melt(music_data, id.vars = c(\"Year\", \"Genres\"))\n\n# Plot\nmusic_data_long %&gt;%\n  group_by(Year, Genres) %&gt;% \n  count() %&gt;%\nggplot(aes(x = Year, y = n, color = Genres)) +\n  geom_point() +\n  geom_line() +\n  labs(title = \"Genre Trends Over Time\",\n       x = \"Year\",\n       y = \"Number of Songs\",\n       color = \"Genre\") +\n  scale_color_manual(values = c(\"r&b\" = \"#FFB6C1\", \"pop\" = \"#87CEEB\", \"hip pop\" = \"#FFD700\",\n                                 \"soul\" = \"#FF4500\", \"rock\" = \"#9400D3\",\n                                \"country\" = \"#FF1493\")) +\n  theme_minimal()\n\n\n\n\n\nmusic_data_long %&gt;%\n   group_by(Year, Genres) %&gt;% \n  count() %&gt;%\n  ggplot(aes(x = Year, y = n, fill = Genres)) +\n  geom_col(position = \"fill\")\n\n\n\n# Function to replace genre with matching genre from the list\n# Load required libraries\nlibrary(ggplot2)\nlibrary(dplyr)\n\n# Read the dataset\nmusic_data &lt;- read.csv(\"/Users/shawnji/Documents/billboard_used.csv\")  # Replace \"your_dataset.csv\" with the actual file path\n\n# List of genres\ngenres &lt;- c('r&b', 'pop', 'hip pop', 'soul', 'rock', 'country')\n\nreplace_genre &lt;- function(genre_str, genre_list) {\n  for (genre in genre_list) {\n    if (genre %in% unlist(strsplit(gsub(\"\\\\[|\\\\]|'\", \"\", genre_str), \", \"))) {\n      return(genre)\n    }\n  }\n  return(NA)\n}\n\n# Modify 'Genres' column to have only the matching genre\nmusic_data$Genres &lt;- sapply(music_data$Genres, replace_genre, genre_list = genres)\n\n# Remove rows with NA in 'Genres' column\nmusic_data &lt;- music_data[complete.cases(music_data$Genres), ]\n\n# Filter data for the year 2000\nmusic_data_2000 &lt;- filter(music_data, Year == 2000)\n\n# Count occurrences of each genre in 2000\ngenre_counts_2000 &lt;- table(music_data_2000$Genres)\n\n# Filter data for the year 2022\nmusic_data_2022 &lt;- filter(music_data, Year == 2022)\n\n# Count occurrences of each genre in 2022\ngenre_counts_2022 &lt;- table(music_data_2022$Genres)\n\n# Create data frames for pie charts\npie_data_2000 &lt;- data.frame(genre = names(genre_counts_2000), count = as.numeric(genre_counts_2000))\npie_data_2022 &lt;- data.frame(genre = names(genre_counts_2022), count = as.numeric(genre_counts_2022))\n\n# Calculate percentage for each genre\npie_data_2000$percentage &lt;- pie_data_2000$count / sum(pie_data_2000$count) * 100\npie_data_2022$percentage &lt;- pie_data_2022$count / sum(pie_data_2022$count) * 100\n\n# Plot pie chart for 2000\npie_chart_2000 &lt;- ggplot(pie_data_2000, aes(x = \"\", y = percentage, fill = genre)) +\n  geom_bar(stat = \"identity\", color = \"black\") +\n  geom_text(aes(label = paste0(round(percentage), \"%\")), position = position_stack(vjust = 0.5), size = 3.5) +\n  coord_polar(\"y\", start = 0) +\n  labs(title = \"Genre Distribution in 2000\") +\n  theme_void() +\n  scale_fill_brewer(palette = \"Set3\") +\n  theme(legend.position = \"right\")\n\n# Plot pie chart for 2022\npie_chart_2022 &lt;- ggplot(pie_data_2022, aes(x = \"\", y = percentage, fill = genre)) +\n  geom_bar(stat = \"identity\", color = \"black\") +\n  geom_text(aes(label = paste0(round(percentage), \"%\")), position = position_stack(vjust = 0.5), size = 3.5) +\n  coord_polar(\"y\", start = 0) +\n  labs(title = \"Genre Distribution in 2022\") +\n  theme_void() +\n  scale_fill_brewer(palette = \"Set3\") +\n  theme(legend.position = \"right\")\n\n\n# Print pie chartsSS\nprint(pie_chart_2000)\n\n\n\nprint(pie_chart_2022)"
  },
  {
    "objectID": "Description.html",
    "href": "Description.html",
    "title": "Description",
    "section": "",
    "text": "Description\nHi my name is Shawn and I major in Mechatronics Engineering. I’m doing a exchange term in NUS this term!"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Shawn’s website",
    "section": "",
    "text": "Heyyy, my name is Shawn and welcome to my website! I’m in year 3 of engineering and you can find all my final projects of NM2207 here!\n\ndataset &lt;- read.csv(\"/Users/shawnji/Documents/GitHub/shawnji3.github.io/Billboard_Hot100_Songs_Spotify_1946-2022.csv\")"
  },
  {
    "objectID": "courses.html",
    "href": "courses.html",
    "title": "Courses",
    "section": "",
    "text": "Courses\nThese are the courses I’ve been taking so far!"
  },
  {
    "objectID": "Week-8Diary.html",
    "href": "Week-8Diary.html",
    "title": "Week 8: Final Project Diary",
    "section": "",
    "text": "I. Topics\nThe focus of the final project is to investigate how the preferences for popular songs have evolved throughout the 21st century. The goal is to determine the most popular streamed genres from 2000 to 2022, covering the past 20 years, with a specific emphasis on the years 2020 to 2022.\n\n\nII. Data Source\nThe dataset has been curated to include the top 50 ranking songs on the Billboard charts from 2000 to 2022. The analysis will specifically examine the trends in different music genres over this 22-year period."
  },
  {
    "objectID": "about.html#trend-lines-of-each-genre-from-2000---2022",
    "href": "about.html#trend-lines-of-each-genre-from-2000---2022",
    "title": "Data Visualization",
    "section": "",
    "text": "The first data visualization is a trend line where it shows the trend of the popularity of a specific genre through 2000-2022. There are 6 genres in total, ‘r&b’, ‘pop’, ‘hip pop’, ‘soul’, ‘rock’, ‘country’’. There are different colors labeled for different genres\n\n# Load required libraries\nlibrary(ggplot2)\nlibrary(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\n# Read the dataset\nmusic_data &lt;- read.csv(\"/Users/shawnji/Documents/billboard_used.csv\")  # Replace \"your_dataset.csv\" with the actual file path\n\n# List of genres\ngenres &lt;- c('r&b', 'pop', 'hip pop', 'soul', 'rock', 'country')\n\n# Function to replace genre with matching genre from the list\nreplace_genre &lt;- function(genre_str, genre_list) {\n  for (genre in genre_list) {\n    if (genre %in% unlist(strsplit(gsub(\"\\\\[|\\\\]|'\", \"\", genre_str), \", \"))) {\n      return(genre)\n    }\n  }\n  return(NA)\n}\n\n# Modify 'Genres' column to have only the matching genre\nmusic_data$Genres &lt;- sapply(music_data$Genres, replace_genre, genre_list = genres)\n\n# Remove rows with NA in 'Genres' column\nmusic_data &lt;- music_data[complete.cases(music_data$Genres), ]\n\n# Reshape the data into long format\nmusic_data_long &lt;- reshape2::melt(music_data, id.vars = c(\"Year\", \"Genres\"))\n\n# Plot\nmusic_data_long %&gt;%\n  group_by(Year, Genres) %&gt;% \n  count() %&gt;%\nggplot(aes(x = Year, y = n, color = Genres)) +\n  geom_point() +\n  geom_line() +\n  labs(title = \"Genre Trends Over Time\",\n       x = \"Year\",\n       y = \"Number of Songs\",\n       color = \"Genre\") +\n  scale_color_manual(values = c(\"r&b\" = \"#FFB6C1\", \"pop\" = \"#87CEEB\", \"hip pop\" = \"#FFD700\",\n                                 \"soul\" = \"#FF4500\", \"rock\" = \"#9400D3\",\n                                \"country\" = \"#FF1493\")) +\n  theme_minimal()\n\n\n\n\n\nmusic_data_long %&gt;%\n   group_by(Year, Genres) %&gt;% \n  count() %&gt;%\n  ggplot(aes(x = Year, y = n, fill = Genres)) +\n  geom_col(position = \"fill\")\n\n\n\n# Function to replace genre with matching genre from the list\n# Load required libraries\nlibrary(ggplot2)\nlibrary(dplyr)\n\n# Read the dataset\nmusic_data &lt;- read.csv(\"/Users/shawnji/Documents/billboard_used.csv\")  # Replace \"your_dataset.csv\" with the actual file path\n\n# List of genres\ngenres &lt;- c('r&b', 'pop', 'hip pop', 'soul', 'rock', 'country')\n\nreplace_genre &lt;- function(genre_str, genre_list) {\n  for (genre in genre_list) {\n    if (genre %in% unlist(strsplit(gsub(\"\\\\[|\\\\]|'\", \"\", genre_str), \", \"))) {\n      return(genre)\n    }\n  }\n  return(NA)\n}\n\n# Modify 'Genres' column to have only the matching genre\nmusic_data$Genres &lt;- sapply(music_data$Genres, replace_genre, genre_list = genres)\n\n# Remove rows with NA in 'Genres' column\nmusic_data &lt;- music_data[complete.cases(music_data$Genres), ]\n\n# Filter data for the year 2000\nmusic_data_2000 &lt;- filter(music_data, Year == 2000)\n\n# Count occurrences of each genre in 2000\ngenre_counts_2000 &lt;- table(music_data_2000$Genres)\n\n# Filter data for the year 2022\nmusic_data_2022 &lt;- filter(music_data, Year == 2022)\n\n# Count occurrences of each genre in 2022\ngenre_counts_2022 &lt;- table(music_data_2022$Genres)\n\n# Create data frames for pie charts\npie_data_2000 &lt;- data.frame(genre = names(genre_counts_2000), count = as.numeric(genre_counts_2000))\npie_data_2022 &lt;- data.frame(genre = names(genre_counts_2022), count = as.numeric(genre_counts_2022))\n\n# Calculate percentage for each genre\npie_data_2000$percentage &lt;- pie_data_2000$count / sum(pie_data_2000$count) * 100\npie_data_2022$percentage &lt;- pie_data_2022$count / sum(pie_data_2022$count) * 100\n\n# Plot pie chart for 2000\npie_chart_2000 &lt;- ggplot(pie_data_2000, aes(x = \"\", y = percentage, fill = genre)) +\n  geom_bar(stat = \"identity\", color = \"black\") +\n  geom_text(aes(label = paste0(round(percentage), \"%\")), position = position_stack(vjust = 0.5), size = 3.5) +\n  coord_polar(\"y\", start = 0) +\n  labs(title = \"Genre Distribution in 2000\") +\n  theme_void() +\n  scale_fill_brewer(palette = \"Set3\") +\n  theme(legend.position = \"right\")\n\n# Plot pie chart for 2022\npie_chart_2022 &lt;- ggplot(pie_data_2022, aes(x = \"\", y = percentage, fill = genre)) +\n  geom_bar(stat = \"identity\", color = \"black\") +\n  geom_text(aes(label = paste0(round(percentage), \"%\")), position = position_stack(vjust = 0.5), size = 3.5) +\n  coord_polar(\"y\", start = 0) +\n  labs(title = \"Genre Distribution in 2022\") +\n  theme_void() +\n  scale_fill_brewer(palette = \"Set3\") +\n  theme(legend.position = \"right\")\n\n\n# Print pie chartsSS\nprint(pie_chart_2000)\n\n\n\nprint(pie_chart_2022)"
  }
]